FUNCTION "TF_EXPOSURE_FORECAST_RATIO"( IP_EXP_CURRENCY NVARCHAR(03) )
    RETURNS TABLE( 
                   PERIOD INTEGER,
                   PLANNING_YEAR INTEGER,
                   EXPOSURE_CURRENCY NVARCHAR(5),
                   TARGET_CURRENCY NVARCHAR(5),
                   ACTUAL DECIMAL(16,5),
                   FORECASTED DECIMAL(16,5),
                   RATIO DECIMAL,
                   PREDICTED BOOLEAN,
                   MODELNAME NVARCHAR(100),
                   MSE NVARCHAR(100),
                   ALPHA NVARCHAR(100),
                   BETA NVARCHAR(100),
                   PHI NVARCHAR(100),
                   DAMPED NVARCHAR(100)
                )
    LANGUAGE SQLSCRIPT 
    SQL SECURITY INVOKER AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
    
    DECLARE T_RATIO_FORECAST "TT_FORECAST";
    DECLARE V_NUM_FORECAST INTEGER;
    DECLARE T_STATISTICS_AUTO_EXP "TT_STATISTICS_AUTO_EXP";
    DECLARE V_EXP_CURR NVARCHAR(03);
    DECLARE V_TAR_CURR NVARCHAR(03);
    DECLARE V_RATIO DECIMAL;
    DECLARE V_MODELNAME NVARCHAR(100);
    DECLARE V_MSE NVARCHAR(100);
    DECLARE V_ALPHA NVARCHAR(100);
    DECLARE V_BETA NVARCHAR(100);
    DECLARE V_PHI NVARCHAR(100);
    DECLARE V_DAMPED NVARCHAR(100);
    DECLARE V_COUNT INTEGER;
    DECLARE V_RETURN BOOLEAN;
    DECLARE V_FWD_HORIZON INTEGER;
    DECLARE V_MAX_DATE DATE;
    DECLARE V_DATE DATE;
    DECLARE V_MAX_YEAR INTEGER;
    DECLARE V_MAX_PERIOD INTEGER;

    SELECT CURRENT_UTCDATE INTO V_DATE FROM "SY_DUMMY";

    IF :V_COUNT !=0 THEN
        SELECT FORWARD_HORIZON
            INTO V_FWD_HORIZON
            FROM T_HEDGE_PROFILE
            WHERE DEFAULT = 'X' 
            AND "EXPOSURE_CURRENCY" = :IP_EXP_CURRENCY;
    ELSE
        V_FWD_HORIZON = 12;
    END IF;

    T_EXP_AMOUNT =  SELECT TO_INTEGER(B.PERIOD) AS PERIOD,
                        B.PLANNING_YEAR,
                        B.EXPOSURE_CURRENCY,
                        B.TARGET_CURRENCY,
                        A.ACTUAL * -1 AS ACTUAL,
                        B.EXPOSURE_AMOUNT AS FORECASTED,
                        ROUND ((A.ACTUAL * -1 / B.EXPOSURE_AMOUNT), 3) AS RATIO
                        FROM(
                            SELECT PERIOD, 
                                PLANNING_YEAR, 
                                EXPOSURE_CURRENCY, 
                                TARGET_CURRENCY, 
                                SUM(ACTUAL_AMOUNT) AS ACTUAL 
                                FROM "T_ACTUAL_POSTING"
                                WHERE EXPOSURE_CURRENCY = :IP_EXP_CURRENCY
                                GROUP BY 
                                PERIOD, PLANNING_YEAR, EXPOSURE_CURRENCY, TARGET_CURRENCY
                        ) AS A
                        RIGHT OUTER JOIN (
                            SELECT PERIOD, 
                                PLANNING_YEAR, 
                                EXPOSURE_CURRENCY, 
                                TARGET_CURRENCY, 
                                SUM(EXPOSURE_AMOUNT) AS EXPOSURE_AMOUNT 
                                FROM "T_EXPOSURE_POSITION_FLOWS"
                                WHERE EXPOSURE_CURRENCY = :IP_EXP_CURRENCY
                                GROUP BY 
                                PERIOD, PLANNING_YEAR, EXPOSURE_CURRENCY, TARGET_CURRENCY
                        ) AS B ON A.PERIOD = B.PERIOD
                        AND A.PLANNING_YEAR = B.PLANNING_YEAR
                        AND A.EXPOSURE_CURRENCY = B.EXPOSURE_CURRENCY
                        AND A.TARGET_CURRENCY = B.TARGET_CURRENCY;

    IF IS_EMPTY(:T_EXP_AMOUNT) THEN
        RETURN SELECT NULL AS PERIOD, NULL AS PLANNING_YEAR, NULL AS EXPOSURE_CURRENCY, 
                NULL AS TARGET_CURRENCY, NULL AS ACTUAL, NULL AS FORECASTED, NULL AS RATIO, 
                FALSE AS PREDICTED, NULL AS MODELNAME, NULL AS MSE,
                NULL AS ALPHA, NULL AS BETA, NULL AS PHI, NULL AS DAMPED
                FROM "SY_DUMMY";
    END IF;

    
    SELECT TOP 1 PLANNING_YEAR INTO V_MAX_YEAR
        FROM T_ACTUAL_POSTING
        ORDER BY PLANNING_YEAR DESC;

    SELECT TOP 1 PLANNING_YEAR, MAX(PERIOD) 
        INTO V_MAX_YEAR, V_MAX_PERIOD
        FROM T_ACTUAL_POSTING
        WHERE PLANNING_YEAR = :V_MAX_YEAR
        GROUP BY EXPOSURE_CURRENCY, TARGET_CURRENCY, PLANNING_YEAR;

    T_DATA_DATE = SELECT *, TO_DATE(CONCAT(CONCAT(CONCAT(CONCAT(PLANNING_YEAR, '-'), PERIOD), '-'), '1') ) AS DATE 
                    FROM :T_EXP_AMOUNT;

    T_DATA = SELECT TO_INTEGER(ROW_NUMBER() OVER (ORDER BY (SELECT 1 FROM "SY_DUMMY"))) AS ID, 
                    TO_DOUBLE(RATIO) AS RATIO 
                FROM :T_DATA_DATE
                WHERE ACTUAL IS NOT NULL AND DATE < :V_DATE
                ORDER BY DATE;

    IF NOT IS_EMPTY(:T_DATA_DATE) THEN
        SELECT TOP 1 EXPOSURE_CURRENCY, TARGET_CURRENCY INTO V_EXP_CURR, V_TAR_CURR 
            FROM :T_DATA_DATE;
    ELSE
        V_RETURN = TRUE;
    END IF; 
    
    IF IS_EMPTY(:T_DATA) THEN
        V_RETURN = TRUE;
    END IF;

    IF :V_RETURN = TRUE THEN
        RETURN SELECT NULL AS PERIOD, NULL AS PLANNING_YEAR, NULL AS EXPOSURE_CURRENCY, 
            NULL AS TARGET_CURRENCY, NULL AS ACTUAL, NULL AS FORECASTED, NULL AS RATIO, 
            FALSE AS PREDICTED, NULL AS MODELNAME, NULL AS MSE,
            NULL AS ALPHA, NULL AS BETA, NULL AS PHI, NULL AS DAMPED
            FROM "SY_DUMMY";
    END IF;
    
    SELECT TO_DATE(CONCAT(CONCAT(CONCAT(CONCAT(:V_MAX_YEAR, '-'), :V_MAX_PERIOD), '-'), '1')) INTO V_MAX_DATE
        FROM "SY_DUMMY";

    T_AUTO_SMOTH_PARAMS =   SELECT 'FORECAST_NUM' AS PARAM_NAME,
                                    (MONTHS_BETWEEN(:V_MAX_DATE, :V_DATE) + :V_FWD_HORIZON) AS INT_VALUE, 
                                    null AS DOUBLE_VALUE, 
                                    null AS STRING_VALUE
                            FROM "SY_DUMMY"
                                UNION                  
                            SELECT 'MODELSELECTION' AS PARAM_NAME,
                                    1 AS INT_VALUE, 
                                    null AS DOUBLE_VALUE, 
                                    null AS STRING_VALUE
                            FROM "SY_DUMMY"
                                UNION
                            SELECT 'CYCLE' AS PARAM_NAME,
                                    12 AS INT_VALUE, 
                                    0.0 AS DOUBLE_VALUE, 
                                    null AS STRING_VALUE
                            FROM "SY_DUMMY";

    CALL "PAL_AUTO_EXPSMOOTH"(P1 => :T_DATA, P2 => :T_AUTO_SMOTH_PARAMS, P3 => :T_RATIO_FORECAST, P4 => :T_STATISTICS_AUTO_EXP);

    T_PREDICTION_OUT = SELECT TO_INTEGER(ROW_NUMBER() OVER (ORDER BY (SELECT 1 FROM "SY_DUMMY"))) AS ID,
                        ROUND(VALUE, 3) AS RATIO
                    FROM :T_RATIO_FORECAST 
                    WHERE "PI1_LOWER" IS NOT NULL
                    ORDER BY TIMESTAMP;
    
    T_PREDICTION_OUT_DATE = SELECT ADD_MONTHS(:V_MAX_DATE, ID - 1) AS DATE, *
                                FROM :T_PREDICTION_OUT;               

    T_EXP_TEMP = SELECT MONTH(DATE) AS PERIOD, YEAR(DATE) AS "PLANNING_YEAR", :V_EXP_CURR AS EXPOSURE_CURRENCY,
                        :V_TAR_CURR AS TARGET_CURRENCY, RATIO
                        FROM :T_PREDICTION_OUT_DATE;

    T_EXP_ALL_RATIO =  SELECT A.PERIOD, A.PLANNING_YEAR, A.EXPOSURE_CURRENCY, A.TARGET_CURRENCY, A.ACTUAL, A.FORECASTED,
                        IFNULL(A.RATIO, B.RATIO) AS RATIO,
                        CASE WHEN A.ACTUAL IS NULL THEN TRUE
                                 ELSE FALSE
                            END AS PREDICTED
                        FROM :T_EXP_AMOUNT AS A
                        LEFT OUTER JOIN :T_EXP_TEMP AS B
                        ON A.PERIOD = B.PERIOD
                        AND A.PLANNING_YEAR = B.PLANNING_YEAR
                        AND A.EXPOSURE_CURRENCY = B.EXPOSURE_CURRENCY
                        AND A.TARGET_CURRENCY = B.TARGET_CURRENCY;

    T_STAT1 = SELECT "STAT_VALUE"
                    FROM :T_STATISTICS_AUTO_EXP
                    WHERE STAT_NAME = 'FORECAST_MODEL_NAME';

    T_STAT2 = SELECT "STAT_VALUE"
                    FROM :T_STATISTICS_AUTO_EXP
                    WHERE STAT_NAME = 'MSE';
    
    T_STAT3 = SELECT "STAT_VALUE"
                    FROM :T_STATISTICS_AUTO_EXP
                    WHERE STAT_NAME = 'ALPHA';
    
    T_STAT4 = SELECT "STAT_VALUE"
                    FROM :T_STATISTICS_AUTO_EXP
                    WHERE STAT_NAME = 'BETA';
                    
    T_STAT5 = SELECT "STAT_VALUE"
                    FROM :T_STATISTICS_AUTO_EXP
                    WHERE STAT_NAME = 'PHI' ;
                    
    T_STAT6 = SELECT "STAT_VALUE"
                    FROM :T_STATISTICS_AUTO_EXP
                    WHERE STAT_NAME = 'DAMPED' ;

    IF NOT IS_EMPTY(:T_STAT1) THEN
        SELECT "STAT_VALUE" INTO V_MODELNAME FROM :T_STAT1;
    END IF;

    IF NOT IS_EMPTY(:T_STAT2) THEN
        SELECT "STAT_VALUE" INTO V_MSE FROM :T_STAT2;
    END IF;

    IF NOT IS_EMPTY(:T_STAT3) THEN
        SELECT "STAT_VALUE" INTO V_ALPHA FROM :T_STAT3;
    END IF;

    IF NOT IS_EMPTY(:T_STAT4) THEN
        SELECT "STAT_VALUE" INTO V_BETA FROM :T_STAT4;
    END IF;

    IF NOT IS_EMPTY(:T_STAT5) THEN
        SELECT "STAT_VALUE" INTO V_PHI FROM :T_STAT5;
    END IF;

    IF NOT IS_EMPTY(:T_STAT6) THEN
        SELECT "STAT_VALUE" INTO V_DAMPED FROM :T_STAT6;
    END IF;

    RETURN SELECT PERIOD ,
                   PLANNING_YEAR ,
                   EXPOSURE_CURRENCY ,
                   TARGET_CURRENCY ,
                   CASE WHEN ACTUAL IS NULL AND RATIO IS NOT NULL THEN FORECASTED * RATIO
                   ELSE ACTUAL
                   END AS ACTUAL,
                   FORECASTED ,
                   ROUND(RATIO, 3) AS RATIO,
                   PREDICTED,
                   :V_MODELNAME AS MODELNAME,
                   :V_MSE AS MSE,
                   :V_ALPHA AS ALPHA,
                   :V_BETA AS BETA,
                   :V_PHI AS PHI,
                   :V_DAMPED AS DAMPED
                   FROM :T_EXP_ALL_RATIO;
END;