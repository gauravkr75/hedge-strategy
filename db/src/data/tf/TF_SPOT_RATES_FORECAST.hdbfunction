FUNCTION "TF_SPOT_RATES_FORECAST"( )
    RETURNS TABLE 
    (
        YEAR                INTEGER,
        MONTH               INTEGER,
        TENOR               INTEGER,
        EXPOSURE_CURRENCY   NVARCHAR(05),    
        TARGET_CURRENCY     NVARCHAR(05),  
        AVG_SPOT_RATE       DECIMAL(9, 5)
    )
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER AS
BEGIN
    /*****************************
        Write your function logic
    ****************************/

    DECLARE V_DEL_INDEX_END INTEGER;
    DECLARE V_TENOR NVARCHAR(02);
    DECLARE V_MIN_DATE DATE;
    DECLARE T_FORECAST "TT_FORECAST";
    DECLARE T_STATISTICS "TT_STATISTICS";
    DECLARE T_SMOOTH_PARAMS "TT_TRI_EXP_SMOOTH_PARAMS";
    DECLARE T_AUTO_SMOTH_PARAMS "TT_AUTO_EXP_SMOOTH_PARAMS";
    DECLARE I INTEGER;
    DECLARE J INTEGER;
    DECLARE V_MAX_DATE DATE;
    DECLARE V_MAX_YEAR INTEGER;
    DECLARE V_MAX_PERIOD INTEGER;
    DECLARE V_MIN_TIMESTAMP INTEGER;
    DECLARE V_FROM_CURR NVARCHAR(5);
    DECLARE V_TO_CURR NVARCHAR(5);
    DECLARE V_EXP_CURR NVARCHAR(5);
    DECLARE V_DATE DATE;

    -- SELECT TO_DATE(CONCAT(CONCAT(CONCAT(CONCAT(YEAR, '-'), START_MONTH), '-'), '1'))
    --     INTO V_DATE
    --     FROM T_HEDGE_PROFILE
    --     WHERE DEFAULT = 'X'; 
    SELECT CURRENT_UTCDATE INTO V_DATE FROM "SY_DUMMY";

    T_AUTO_SMOTH_PARAMS =   SELECT 'FORECAST_NUM' AS PARAM_NAME,
                                    12 AS INT_VALUE, 
                                    NULL AS DOUBLE_VALUE, 
                                    NULL AS STRING_VALUE
                            FROM "SY_DUMMY"
                                UNION                  
                            SELECT 'MODELSELECTION' AS PARAM_NAME,
                                    1 AS INT_VALUE, 
                                    NULL AS DOUBLE_VALUE, 
                                    NULL AS STRING_VALUE
                            FROM "SY_DUMMY"
                                UNION
                            SELECT 'CYCLE' AS PARAM_NAME,
                                    12 AS INT_VALUE, 
                                    NULL AS DOUBLE_VALUE, 
                                    NULL AS STRING_VALUE
                            FROM "SY_DUMMY";

    T_UNQ_EXP_CURR = SELECT DISTINCT EXPOSURE_CURRENCY FROM T_EXPOSURE_POSITION_FLOWS;

    FOR J IN 1..RECORD_COUNT(:T_UNQ_EXP_CURR) DO

        V_EXP_CURR = :T_UNQ_EXP_CURR.EXPOSURE_CURRENCY[:J];

        FOR I IN 0..12 DO

            IF I < 10 THEN
                SELECT CONCAT('0', TO_NVARCHAR(:I)) INTO V_TENOR FROM SY_DUMMY;
            ELSE
                SELECT TO_NVARCHAR(:I) INTO V_TENOR FROM SY_DUMMY;
            END IF;

            T_DATA = SELECT *, TO_DATE(CONCAT(CONCAT(CONCAT(CONCAT(YEAR, '-'), MONTH), '-'), '1') ) AS DATE
                                FROM "CV_SPOT_RATES_HISTORICAL_CURVES"
                                WHERE TENOR = :V_TENOR 
                                AND EXPOSURE_CURRENCY = :V_EXP_CURR;
            
            IF IS_EMPTY(:T_DATA) THEN
                CONTINUE;
            END IF;
            
            T_PROCESS_DATA = SELECT *
                                FROM :T_DATA
                                WHERE DATE < :V_DATE;                                

            T_DATA_IN = SELECT TO_INTEGER(ROW_NUMBER() OVER (ORDER BY (SELECT 1 FROM "SY_DUMMY"))) AS ID, AVG_SPOT_RATE
                        FROM :T_PROCESS_DATA
                        ORDER BY YEAR, MONTH;
            
            IF IS_EMPTY(:T_DATA_IN) THEN
                CONTINUE;
            END IF;

            CALL "PAL_AUTO_EXPSMOOTH"(P1 => :T_DATA_IN, P2 => :T_AUTO_SMOTH_PARAMS, P3 => :T_FORECAST, P4 => :T_STATISTICS);
            
            T_TEMP_FORECAST = SELECT * FROM :T_FORECAST WHERE PI1_LOWER IS NOT NULL ORDER BY TIMESTAMP;

            SELECT MIN(TIMESTAMP) INTO V_MIN_TIMESTAMP FROM :T_TEMP_FORECAST;

            SELECT MAX(YEAR) INTO V_MAX_YEAR 
                FROM :T_PROCESS_DATA;
                
            SELECT MAX(MONTH) INTO V_MAX_PERIOD 
                FROM :T_PROCESS_DATA;

            T_ROW_ID_OUT = SELECT  TO_INTEGER(ROW_NUMBER() OVER (ORDER BY (SELECT 1 FROM "SY_DUMMY"))) AS ROW_NUM,
                            :V_TENOR AS TENOR, 
                            :V_EXP_CURR AS EXPOSURE_CURRENCY,
                            'EUR' AS TARGET_CURRENCY,
                            TO_DECIMAL(VALUE, 9, 5) AS AVG_SPOT_RATE
                        FROM :T_TEMP_FORECAST;

            T_OUT = SELECT  CASE WHEN ROW_NUM + :V_MAX_PERIOD > 12 THEN :V_MAX_YEAR + 1
                                 ELSE :V_MAX_YEAR
                            END AS YEAR,
                            CASE WHEN MOD((ROW_NUM + :V_MAX_PERIOD), 12) = 0 THEN 12
                                 ELSE MOD((ROW_NUM + :V_MAX_PERIOD), 12)
                            END AS MONTH,
                            TENOR,
                            EXPOSURE_CURRENCY,
                            TARGET_CURRENCY,
                            AVG_SPOT_RATE
                        FROM :T_ROW_ID_OUT;

            IF :I = 1 THEN
                T_RESULT = SELECT * FROM :T_OUT;
            ELSE
                :T_RESULT.INSERT(:T_OUT);
            END IF;
            

        END FOR;

    END FOR;

    RETURN
    
    SELECT * FROM :T_RESULT;

END;