PROCEDURE "P_DET_YEAR_PNL"( 
	IN IV_DURATION	INTEGER,
	IN IV_NUM_LAYERS INTEGER
	)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
    DECLARE T_MONTH_OUT 		"TT_MONTH_LAYERS";
    DECLARE T_MONTH_CODE_MAP "TT_MONTH_CODE_MAP";
    DECLARE T_PNL_ALL  "T_LAYER_YEAR_PNL";
    DECLARE I INTEGER;
    DECLARE J INTEGER;
	DECLARE V_DAY NVARCHAR(02);
    DECLARE V_FIRST_MONTH_START NVARCHAR(03);
    DECLARE V_FIRST_MONTH_END NVARCHAR(03);
    DECLARE V_FIRST_MONTH_END_DAY NVARCHAR(02);
    DECLARE V_MONTH_START_DATE DATE;
    DECLARE V_MONTH_END_DATE DATE;
    DECLARE V_FIRST_MONTH_START_CODE INTEGER;
    DECLARE V_FIRST_MONTH_END_CODE INTEGER;
    DECLARE V_SECOND_MONTH_START NVARCHAR(03);
    DECLARE V_SECOND_MONTH_END NVARCHAR(03);
    DECLARE V_SECOND_MONTH_START_CODE INTEGER;
    DECLARE V_SECOND_MONTH_END_CODE INTEGER;
    DECLARE V_SECOND_MONTH_END_DAY NVARCHAR(02);
    DECLARE V_SIM_ID INTEGER;
    DECLARE V_SMART_KEY NVARCHAR(20);
    DECLARE V_YEAR INTEGER DEFAULT 2010;
    DECLARE V_QUOTE_PRICE DECIMAL(25,20);
    DECLARE V_SPOT_PRICE DECIMAL(25,20);
    DECLARE V_FIRST_PNL DECIMAL(25,20);
    DECLARE V_SECOND_PNL DECIMAL(25,20);
    DECLARE V_FORWARD_MONTH INTEGER;

    CALL "P_GENERATE_COMBINATION_TEST"(IV_DURATION=> IV_DURATION, IV_NUM_LAYERS=> IV_NUM_LAYERS, OT_MONTH_OUT=> :T_MONTH_OUT, OT_MONTH_CODE_MAP=> :T_MONTH_CODE_MAP);
    
    
    T_MONTH_NUM_CHAR = SELECT 1 AS MONTH_NUM,
							'01' AS MONTH_NO_CHAR
						FROM
						"SY_DUMMY"
						UNION
						SELECT 2 AS MONTH_NUM,
							'02' AS MONTH_NO_CHAR
						FROM
						"SY_DUMMY"
						UNION
						SELECT 3 AS MONTH_NUM,
							'03' AS MONTH_NO_CHAR
						FROM
						"SY_DUMMY"
						UNION
						SELECT 4 AS MONTH_NUM,
							'04' AS MONTH_NO_CHAR
						FROM
						"SY_DUMMY"
						UNION
						SELECT 5 AS MONTH_NUM,
							'05' AS MONTH_NO_CHAR
						FROM
						"SY_DUMMY"
						UNION
						SELECT 6 AS MONTH_NUM,
							'06' AS MONTH_NO_CHAR
						FROM
						"SY_DUMMY"
						UNION
						SELECT 7 AS MONTH_NUM,
							'07' AS MONTH_NO_CHAR
						FROM
						"SY_DUMMY"
						UNION
				SELECT 8 AS MONTH_NUM,
							'08' AS MONTH_NO_CHAR
						FROM
						"SY_DUMMY"
						UNION
					SELECT 9 AS MONTH_NUM,
						 '09' AS MONTH_NO_CHAR
						FROM
						"SY_DUMMY"
						UNION
				SELECT 10 AS MONTH_NUM,
						'10' AS MONTH_NO_CHAR
						FROM
						"SY_DUMMY"
						UNION
				SELECT 11 AS MONTH_NUM,
						'11' AS MONTH_NO_CHAR
						FROM
						"SY_DUMMY"
						UNION
			SELECT 12 AS MONTH_NUM,
						'12' AS MONTH_NO_CHAR
						FROM
						"SY_DUMMY";

    T_MONTH_LAYER_CODE = SELECT A.*, B.MONTH_NUM AS FIRST_MONTH_START_CODE, C.MONTH_NUM AS FIRST_MONTH_END_CODE,C.MONTH_END_DAY AS FIRST_MONTH_END_DAY,
   							D.MONTH_NUM AS SECOND_MONTH_START_CODE, E.MONTH_NUM AS SECOND_MONTH_END_CODE,E.MONTH_END_DAY AS SECOND_MONTH_END_DAY,
   							ROW_NUMBER() OVER (ORDER BY A.FIRST_MONTH_START) AS SIMID,
   							CONCAT(CONCAT(CONCAT(A.FIRST_MONTH_START, A.FIRST_MONTH_END), A.SECOND_MONTH_START), A.SECOND_MONTH_END) AS SMART_KEY
   							FROM :T_MONTH_OUT AS A
   							LEFT OUTER JOIN :T_MONTH_CODE_MAP AS B
   							ON A.FIRST_MONTH_START = B.MONTH
   							LEFT OUTER JOIN :T_MONTH_CODE_MAP AS C
   							ON A.FIRST_MONTH_END = C.MONTH
   							LEFT OUTER JOIN :T_MONTH_CODE_MAP AS D
   							ON A.SECOND_MONTH_START = D.MONTH
   							LEFT OUTER JOIN :T_MONTH_CODE_MAP AS E
   							ON A.SECOND_MONTH_END = E.MONTH;
   							
   	T_VLD_YEAR = Select distinct Year from T_RATES order by year;

   	FOR I IN 1..RECORD_COUNT(:T_MONTH_LAYER_CODE) DO

   		V_FIRST_MONTH_START = :T_MONTH_LAYER_CODE.FIRST_MONTH_START[I];
   		V_FIRST_MONTH_START_CODE = :T_MONTH_LAYER_CODE.FIRST_MONTH_START_CODE[I];
   		V_FIRST_MONTH_END = :T_MONTH_LAYER_CODE.FIRST_MONTH_END[I];
   		V_FIRST_MONTH_END_CODE = :T_MONTH_LAYER_CODE.FIRST_MONTH_END_CODE[I];
   		V_FIRST_MONTH_END_DAY = :T_MONTH_LAYER_CODE.FIRST_MONTH_END_DAY[I];
   		V_SECOND_MONTH_START = :T_MONTH_LAYER_CODE.SECOND_MONTH_START[I];
   		V_SECOND_MONTH_START_CODE = :T_MONTH_LAYER_CODE.SECOND_MONTH_START_CODE[I];
   		V_SECOND_MONTH_END = :T_MONTH_LAYER_CODE.SECOND_MONTH_END[I];
   		V_SECOND_MONTH_END_CODE = :T_MONTH_LAYER_CODE.SECOND_MONTH_END_CODE[I];
   		V_SECOND_MONTH_END_DAY = :T_MONTH_LAYER_CODE.SECOND_MONTH_END_DAY[I];
   		V_SIM_ID = :T_MONTH_LAYER_CODE.SIMID[I];
    	V_SMART_KEY = :T_MONTH_LAYER_CODE.SMART_KEY[I];
		V_YEAR = 2010;
   		FOR J IN 1..RECORD_COUNT(:T_VLD_YEAR) DO
   		 V_YEAR = :T_VLD_YEAR.YEAR[J];
   		 
   		 
   		 
   		 T_RATE = SELECT * FROM T_RATES WHERE YEAR = V_YEAR ;
   		 
   			
   			-- DETERMINE QUOTE PRICE
               V_FORWARD_MONTH = V_FIRST_MONTH_END_CODE - V_FIRST_MONTH_START_CODE;
               
            IF :V_FORWARD_MONTH = 0.
   			THEN 
               V_FORWARD_MONTH = :V_FIRST_MONTH_END_CODE;
            ELSEIF V_FORWARD_MONTH < 0
            THEN 
               V_FORWARD_MONTH = :V_FIRST_MONTH_END_CODE;
   			END IF;

   			SELECT QUOTE_PRICE INTO V_QUOTE_PRICE FROM :T_RATE WHERE MONTH = :V_FIRST_MONTH_START AND FWD_MONTH = :V_FORWARD_MONTH;
   			
   			SELECT TOP 1 AVG_SPOT_RATE INTO V_SPOT_PRICE FROM :T_RATE WHERE MONTH = :V_FIRST_MONTH_END;
   			V_FIRST_PNL = (1 / V_QUOTE_PRICE) - (1 / V_SPOT_PRICE);
   			
   			
   			
   			T_PNL_LAYER1 = SELECT :V_SMART_KEY AS SMART_KEY, 
   								  :V_SIM_ID AS SIMULATION_ID,
   								  :V_YEAR AS YEAR,
   								  1 AS LAYER,
   								  :V_FIRST_MONTH_START AS MONTH_START,
   								  :V_FIRST_MONTH_START_CODE AS MONTH_START_ID,
   								  cast(CONCAT(CONCAT(concat(CONCAT(:V_YEAR,'-'),b.MONTH_NO_CHAR),'-'),01) as date) AS MONTH_START_DATE,
   								  :V_FIRST_MONTH_END AS MONTH_END,
   								  :V_FIRST_MONTH_END_CODE AS MONTH_END_CODE,
   								  :V_FORWARD_MONTH AS FORWARD_MONTH,
   								  CONCAT(:V_YEAR,V_FIRST_MONTH_START) AS MONTH_START_KEY,
   								  cast(CONCAT(CONCAT(concat(CONCAT(:V_YEAR,'-'),c.month_no_char),'-'),V_FIRST_MONTH_END_DAY) as date) AS MONTH_END_DATE,
   								  CONCAT(:V_YEAR,V_FIRST_MONTH_END) AS MONTH_END_KEY,
   								  :V_QUOTE_PRICE AS FORWARD_PRICE,
   								  :V_SPOT_PRICE AS SPOT_PRICE,
   								  :V_FIRST_PNL AS LAYER_PNL
   								  FROM "SY_DUMMY" as A left outer join :T_MONTH_NUM_CHAR as b on b.month_num = :V_FIRST_MONTH_START_CODE
   								  left outer join :T_MONTH_NUM_CHAR as c on c.month_num = :V_FIRST_MONTH_END_CODE;
   								  
   		--	SELECT QUOTE_PRICE INTO V_QUOTE_PRICE FROM :T_RATE WHERE MONTH = :V_SECOND_MONTH_START AND FWD_MONTH = :V_SECOND_MONTH_END_CODE;
            V_FORWARD_MONTH = V_SECOND_MONTH_END_CODE - V_SECOND_MONTH_START_CODE;
            IF :V_FORWARD_MONTH = 0.
   			THEN 
               V_FORWARD_MONTH = :V_SECOND_MONTH_END_CODE;
            ELSEIF V_FORWARD_MONTH < 0
            THEN 
               V_FORWARD_MONTH = :V_SECOND_MONTH_END_CODE;
   			END IF;

   			SELECT QUOTE_PRICE INTO V_QUOTE_PRICE FROM :T_RATE WHERE MONTH = :V_SECOND_MONTH_START AND FWD_MONTH = :V_FORWARD_MONTH;
   			
   			SELECT TOP 1 AVG_SPOT_RATE INTO V_SPOT_PRICE FROM :T_RATE WHERE MONTH = :V_SECOND_MONTH_END;
   			V_SECOND_PNL = ( 1 / V_QUOTE_PRICE ) - ( 1 / V_SPOT_PRICE );
   			
   			
   			
   				T_PNL_LAYER2 = SELECT :V_SMART_KEY AS SMART_KEY, 
   								  :V_SIM_ID AS SIMULATION_ID,
   								  :V_YEAR AS YEAR,
   								  2 AS LAYER,
   								  :V_SECOND_MONTH_START AS MONTH_START,
   								  :V_SECOND_MONTH_START_CODE AS MONTH_START_ID,
   								   cast(CONCAT(CONCAT(concat(CONCAT(:V_YEAR,'-'),b.month_no_char),'-'),01) as date) AS MONTH_START_DATE,
   								  :V_SECOND_MONTH_END AS MONTH_END,
   								  :V_SECOND_MONTH_END_CODE AS MONTH_END_ID,
   								  :V_FORWARD_MONTH AS FORWARD_MONTH,
   								  CONCAT(:V_YEAR,V_SECOND_MONTH_START) AS MONTH_START_KEY,
   								  cast(CONCAT(CONCAT(concat(CONCAT(:V_YEAR,'-'),c.month_no_char),'-'),V_SECOND_MONTH_END_DAY) as date) AS MONTH_END_DATE,
   								  CONCAT(:V_YEAR,V_SECOND_MONTH_END) AS MONTH_END_KEY,
   								  :V_QUOTE_PRICE AS FORWARD_PRICE,
   								  :V_SPOT_PRICE AS SPOT_PRICE,
   								  :V_SECOND_PNL AS LAYER_PNL
   								  FROM "SY_DUMMY" as A left outer join :T_MONTH_NUM_CHAR as b on b.month_num = :V_SECOND_MONTH_START_CODE
   								  left outer join :T_MONTH_NUM_CHAR as c on c.month_num = :V_SECOND_MONTH_END_CODE;
   				
   				T_PNL_ROW = SELECT * FROM :T_PNL_LAYER1 UNION 
   							SELECT * FROM :T_PNL_LAYER2;

   		--	V_YEAR = :V_YEAR + 1;

   			:T_PNL_ALL.INSERT(:T_PNL_ROW);
   			
   		END FOR;

   	END FOR;
  truncate table "T_LAYER_YEAR_PNL"; 
  UPSERT "T_LAYER_YEAR_PNL" select * from :T_PNL_ALL order by simulation_id, layer, Month_start_date;
 --OT_YEAR_LAYERS = SELECT * FROM :T_PNL_ALL;
   
END
