PROCEDURE "P_DET_PROFIT_LOSS"
(
    IN IV_DURATION	INTEGER,
	IN IV_NUM_LAYERS INTEGER
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
    DECLARE T_MONTH_OUT 		"TT_MONTH_LAYERS";
    DECLARE T_MONTH_CODE_MAP "TT_MONTH_CODE_MAP";
    DECLARE T_PNL_ALL  "T_PROFIT_LOSS_ALL";
    DECLARE I INTEGER;
    DECLARE J INTEGER;

    DECLARE V_FIRST_MONTH_START NVARCHAR(03);
    DECLARE V_FIRST_MONTH_END NVARCHAR(03);
    DECLARE V_FIRST_MONTH_END_CODE INTEGER;
    DECLARE V_SECOND_MONTH_START NVARCHAR(03);
    DECLARE  V_SECOND_MONTH_END NVARCHAR(03);
    DECLARE V_SECOND_MONTH_END_CODE INTEGER;
    DECLARE V_YEAR INTEGER DEFAULT 2010;
    DECLARE V_QUOTE_PRICE DECIMAL(25,20);
    DECLARE V_SPOT_PRICE DECIMAL(25,20);
    DECLARE V_FIRST_PNL DECIMAL(25,20);
    DECLARE V_SECOND_PNL DECIMAL(25,20);

    CALL "P_GENERATE_COMBINATION"(IV_DURATION=> 9, IV_NUM_LAYERS=> 9, OT_MONTH_OUT=> :T_MONTH_OUT, OT_MONTH_CODE_MAP=> :T_MONTH_CODE_MAP);

    T_MONTH_LAYER_CODE = SELECT A.*, B.MONTH_NUM AS FIRST_MONTH_START_CODE, C.MONTH_NUM AS FIRST_MONTH_END_CODE,
   							D.MONTH_NUM AS SECOND_MONTH_START_CODE, E.MONTH_NUM AS SECOND_MONTH_END_CODE 
   							FROM :T_MONTH_OUT AS A
   							LEFT OUTER JOIN :T_MONTH_CODE_MAP AS B
   							ON A.FIRST_MONTH_START = B.MONTH
   							LEFT OUTER JOIN :T_MONTH_CODE_MAP AS C
   							ON A.FIRST_MONTH_END = C.MONTH
   							LEFT OUTER JOIN :T_MONTH_CODE_MAP AS D
   							ON A.SECOND_MONTH_START = D.MONTH
   							LEFT OUTER JOIN :T_MONTH_CODE_MAP AS E
   							ON A.SECOND_MONTH_END = E.MONTH;

   	FOR I IN 1..RECORD_COUNT(:T_MONTH_LAYER_CODE) DO

   		V_FIRST_MONTH_START = :T_MONTH_LAYER_CODE.FIRST_MONTH_START[I];
   		V_FIRST_MONTH_END_CODE = :T_MONTH_LAYER_CODE.FIRST_MONTH_END_CODE[I];
   		V_SECOND_MONTH_START = :T_MONTH_LAYER_CODE.SECOND_MONTH_START[I];
   		V_SECOND_MONTH_END_CODE = :T_MONTH_LAYER_CODE.SECOND_MONTH_END_CODE[I];
   		V_FIRST_MONTH_END = :T_MONTH_LAYER_CODE.FIRST_MONTH_END[I];
   		V_SECOND_MONTH_END = :T_MONTH_LAYER_CODE.SECOND_MONTH_END[I];
		V_YEAR = 2010;
   		FOR J IN 1..11 DO
   			T_RATE = SELECT * FROM "T_RATES" WHERE YEAR = :V_YEAR;
   			
   			SELECT QUOTE_PRICE INTO V_QUOTE_PRICE FROM :T_RATE WHERE MONTH = :V_FIRST_MONTH_START AND FWD_MONTH = :V_FIRST_MONTH_END_CODE;
   			SELECT TOP 1 AVG_SPOT_RATE INTO V_SPOT_PRICE FROM :T_RATE WHERE MONTH = :V_FIRST_MONTH_END;
   			V_FIRST_PNL = V_QUOTE_PRICE - V_SPOT_PRICE;

   			SELECT QUOTE_PRICE INTO V_QUOTE_PRICE FROM :T_RATE WHERE MONTH = :V_SECOND_MONTH_START AND FWD_MONTH = :V_SECOND_MONTH_END_CODE;
   			SELECT TOP 1 AVG_SPOT_RATE INTO V_SPOT_PRICE FROM :T_RATE WHERE MONTH = :V_SECOND_MONTH_END;
   			V_SECOND_PNL = V_QUOTE_PRICE - V_SPOT_PRICE;

   			T_PNL_ROW = SELECT :V_YEAR AS YEAR, :V_FIRST_MONTH_START AS FIRST_MONTH_START, :V_FIRST_MONTH_END AS FIRST_MONTH_END, 
   							   :V_SECOND_MONTH_START AS SECOND_MONTH_START, :V_SECOND_MONTH_END AS SECOND_MONTH_END, :V_FIRST_PNL AS FIRST_PROFIT_LOSS,
   							   :V_SECOND_PNL AS SECOND_PROFIT_LOSS FROM "SY_DUMMY";
   			V_YEAR = :V_YEAR + 1;

   			:T_PNL_ALL.INSERT(:T_PNL_ROW);
   		END FOR;

   	END FOR;
   
   UPSERT "T_PROFIT_LOSS_ALL"
   SELECT * FROM :T_PNL_ALL;
   
END
