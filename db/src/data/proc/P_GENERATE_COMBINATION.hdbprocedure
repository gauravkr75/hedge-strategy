PROCEDURE "P_GENERATE_COMBINATION"
(
	IN IV_DURATION	INTEGER,
	IN IV_NUM_LAYERS INTEGER,
	--OUT OT_MONTH_COMBINATION TABLE( "MONTH_START" NVARCHAR(20), "MONTH_START_NUM" INTEGER, "MONTH_END" NVARCHAR(20), "MONTH_END_NUM" NVARCHAR(20), DURATION INTEGER),
	OUT OT_MONTH_OUT "TT_MONTH_LAYERS", --TABLE( "FIRST_MONTH_START" NVARCHAR(20), "FIRST_MONTH_END" NVARCHAR(20), "SECOND_MONTH_START" NVARCHAR(20), "SECOND_MONTH_END" NVARCHAR(20)),
	OUT OT_MONTH_CODE_MAP "TT_MONTH_CODE_MAP"
	
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   T_MONTH_NUM = SELECT 01 AS MONTH_NUM,
						'Jan' AS MONTH,
						'January' AS MONTH_DESC,
						'31' AS MONTH_END_DAY
					FROM
					"SY_DUMMY"
					UNION
				SELECT 02 AS MONTH_NUM,
						'Feb' AS MONTH,
						'February' AS MONTH_DESC,
						'28' AS MONTH_END_DAY
					FROM
					"SY_DUMMY"
						UNION
				SELECT 03 AS MONTH_NUM,
						'Mar' AS MONTH,
						'March' AS MONTH_DESC,
						'31' AS MONTH_END_DAY
					FROM
					"SY_DUMMY"
						UNION
				SELECT 04 AS MONTH_NUM,
						'Apr' AS MONTH,
						'April' AS MONTH_DESC,
						'30' AS MONTH_END_DAY
					FROM
					"SY_DUMMY"
						UNION
				SELECT 05 AS MONTH_NUM,
						'May' AS MONTH,
						'May' AS MONTH_DESC,
						'31' AS MONTH_END_DAY
					FROM
					"SY_DUMMY"
						UNION
				SELECT 06 AS MONTH_NUM,
						'Jun' AS MONTH,
						'June' AS MONTH_DESC,
						'30' AS MONTH_END_DAY
					FROM
					"SY_DUMMY"
						UNION
				SELECT 07 AS MONTH_NUM,
						'Jul' AS MONTH,
						'July' AS MONTH_DESC,
						'31' AS MONTH_END_DAY
					FROM
					"SY_DUMMY"
						UNION
				SELECT 08 AS MONTH_NUM,
						'Aug' AS MONTH,
						'August' AS MONTH_DESC,
						'31' AS MONTH_END_DAY
					FROM
					"SY_DUMMY"
						UNION
				SELECT 09 AS MONTH_NUM,
						'Sep' AS MONTH,
						'Spetember' AS MONTH_DESC,
						'30' AS MONTH_END_DAY
					FROM
					"SY_DUMMY"
						UNION
				SELECT 10 AS MONTH_NUM,
						'Oct' AS MONTH,
						'October' AS MONTH_DESC,
						'31' AS MONTH_END_DAY
					FROM
					"SY_DUMMY"
						UNION
				SELECT 11 AS MONTH_NUM,
						'Nov' AS MONTH,
						'November' AS MONTH_DESC,
						'30' AS MONTH_END_DAY
					FROM
					"SY_DUMMY"
						UNION
				SELECT 12 AS MONTH_NUM,
						'Dec' AS MONTH,
						'December' AS MONTH_DESC,
						'31' AS MONTH_END_DAY
					FROM
					"SY_DUMMY";
	
	OT_MONTH_CODE_MAP = SELECT * FROM :T_MONTH_NUM;
	
	T_MONTH2 = SELECT * FROM :T_MONTH_NUM;
	T_MONTH_COMB = SELECT CONCAT(CONCAT(A."MONTH_NUM", ', '), B."MONTH_NUM")  AS MONTH_NUM_COMB,
						CONCAT(CONCAT(A."MONTH", ', '), B."MONTH") AS MONTH_COMB
						FROM :T_MONTH_NUM AS A
						INNER JOIN :T_MONTH2 AS B
						ON A.MONTH_NUM < B.MONTH_NUM
						ORDER BY A.MONTH_NUM;
	
	T_OUT = SELECT SUBSTRING ("MONTH_COMB",1,3) AS "MONTH_START",
				   SUBSTRING ("MONTH_COMB",6,3) AS "MONTH_END"
				   FROM :T_MONTH_COMB;
				   
    T_MONTH_COMBINATION = SELECT	A."MONTH_START", B."MONTH_NUM" AS "MONTH_START_NUM", 
    								A."MONTH_END", C."MONTH_NUM" AS "MONTH_END_NUM",
    								(C."MONTH_NUM" - B."MONTH_NUM" + 1) AS DURATION
    						FROM :T_OUT AS A
							LEFT OUTER JOIN :T_MONTH2 AS B
							ON A."MONTH_START" = B."MONTH"
						    LEFT OUTER JOIN :T_MONTH_NUM AS C			   
						    ON A."MONTH_END" = C."MONTH"
						    WHERE B."MONTH_NUM" < C."MONTH_NUM";
						    --B."MONTH_NUM" IN (1,2,3,4) AND C."MONTH_NUM" IN (9, 10, 11, 12);
	T_MONTH_VALID = SELECT MONTH_START, MONTH_START_NUM, MONTH_END, MONTH_END_NUM, DURATION
						FROM :T_MONTH_COMBINATION
						WHERE DURATION >= :IV_DURATION;
	
	T_MONTH_VALID_COMB1 = SELECT MONTH_START, MONTH_START_NUM, MONTH_END, MONTH_END_NUM, 
							ROW_NUMBER() OVER (ORDER BY MONTH_START) AS ID FROM :T_MONTH_COMBINATION;
	
	T_MONTH_VALID_COMB2 = SELECT * FROM :T_MONTH_VALID_COMB1;
	
	T_MONTH_VALID_COMB =	SELECT A.MONTH_START AS FIRST_MONTH_START, A.MONTH_END AS FIRST_MONTH_END, 
									B.MONTH_START AS SECOND_MONTH_START, B.MONTH_END AS SECOND_MONTH_END,
									( B.MONTH_START_NUM - 1) AS SECOND_MONTH_START_CALC, A.MONTH_END_NUM AS FIRST_MONTH_END_NUM,
									(B.MONTH_END_NUM - A.MONTH_START_NUM + 1) AS DUR
								FROM :T_MONTH_VALID_COMB1 AS A
								INNER JOIN :T_MONTH_VALID_COMB2 AS B
								ON A.ID < B.ID
								ORDER BY A.ID;
	
	T_VALID_PERIOD = SELECT * FROM :T_MONTH_VALID_COMB
						WHERE FIRST_MONTH_START IN ( SELECT MONTH_START FROM :T_MONTH_VALID )
						--AND FIRST_MONTH_END IN ( SELECT MONTH_END FROM :T_MONTH_VALID )
						AND SECOND_MONTH_END IN ( SELECT MONTH_END FROM :T_MONTH_VALID );
						--AND  SECOND_MONTH_START IN ( SELECT MONTH_START FROM :T_MONTH_VALID );
	
	T_VALID_PERIOD_CALC = SELECT FIRST_MONTH_START, FIRST_MONTH_END, 
								 SECOND_MONTH_START, SECOND_MONTH_END,
								 DUR,
								 CASE WHEN SECOND_MONTH_START_CALC <= FIRST_MONTH_END_NUM THEN 'TRUE'
								 ELSE 'FALSE'
								 END AS OUTPUT
								 FROM :T_VALID_PERIOD;
								 
	
	T_FINAL =  SELECT FIRST_MONTH_START, FIRST_MONTH_END, 
						SECOND_MONTH_START, SECOND_MONTH_END
						FROM :T_VALID_PERIOD_CALC
						WHERE OUTPUT = 'TRUE' AND DUR >= :IV_DURATION;
	--OT_MONTH_COMBINATION = SELECT * FROM :T_MONTH_VALID;
    OT_MONTH_OUT = SELECT * FROM :T_FINAL;
    
END